<plot>
type  = heatmap
file  = data/heatmap.txt

# set track radius values based on track counter
#r1  = eval(sprintf("%fr",conf(track_start)-counter(heatmap)*(conf(track_width)+conf(track_pad))))
#r0  = eval(sprintf("%fr",conf(track_start)-counter(heatmap)*(conf(track_width)+conf(track_pad))-conf(track_width)))

r0 = eval(sprintf("%fr",conf(track_start)-counter(heatmap)*conf(track_step)))
r1 = eval(sprintf("%fr",conf(track_start)+conf(track_width)-counter(heatmap)*conf(track_step)))

# The track counter will run 0-31, and we want to map this into range 3..11 
# to smoothly vary the spectral color map
#color = spectral-11-div
#color = eval(sprintf("spectral-%d-div",remap_round(counter(heatmap),0,31,11,3)))

# The track counter will run 0-31, and we want to map this into range 3..9
# to smoothly vary the red color map
#color = eval(sprintf("%s-%d-seq",qw(ylorbr reds greens ylgn)[counter(heatmap) / 8],remap_round(counter(heatmap),0,31,9,3)))
#color = eval(sprintf("%s-%d-seq",qw(ylorbr reds greens purples)[counter(heatmap) / 8],remap_round(counter(heatmap),0,31,9,7)))
color = eval(sprintf("%s-9-seq",qw(ylorbr greens reds blues)[counter(heatmap) / 8]))

# Combine two color maps
#color = eval(sprintf("blues-%d-seq-rev,oranges-%d-seq-rev",remap_round(counter(heatmap),0,31,9,3),remap_round(counter(heatmap),0,31,9,3)))

scale_log_base = 0.45

<rules>
<rule>
# Show only data points that have id=A
condition = var(id) ne eval(counter(heatmap))
show      = no
</rule>
</rules>
</plot>